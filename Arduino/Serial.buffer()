sets the number of bytes to buffer before calling serial Event()

형식:
Serial.buffer(count)
count: an int, the number of bytes to buffer

serial example 1:
establishing sentence long conversation between Arduino And PC 

1. serialRead() reads one byte at a time from the serial buffer.
2. 문장 전체를 출력하기 위해선 반드시 시리얼 버퍼에 바이트들이 생길 때까지 루프안에 넣고
   한번에 출력되게 해야한다.. 그것이 지나야 루프가 하던 일을 계속 할 수 있다.

int serIn; //시리얼 버퍼로부터 읽을 바이트를 저장할 변수

void setup() {
  Serial.begin(9600);
  }
  
void loop(){

//반드시 시리얼 버퍼에 바이트가 존재할 때만 아래의 코드를 실행하라
if(Serial.available()){
  Serial.print("Arduino heard you say: "); //아두이노가 내가 하는 어떤 말을 들었음을 알리는
  
  while (Serial.available()>0){
    serIn = Serial.read();
    Serial.print(serIn, BYTE);
  }
  
  Serial.println();
}
delay(1000);
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
arduino_multibyte_serial_example

int  serIn;             // var that will hold the bytes-in read from the serialBuffer
char serInString[100];  // array that will hold the different bytes  100=100characters;
                        // -> you must state how long the array will be else it won't work.
int  serInIndx  = 0;    // index of serInString[] in which to insert the next incoming byte
int  serOutIndx = 0;    // index of the outgoing serInString[] array;


/*read a string from the serial and store it in an array
//you must supply the array variable and the index count
void readSerialString (char *strArray, int indx) {
    int sb;                               //declare local serial byte before anything else
    Serial.print("reading Serial String: ");   
    if(serialAvailable()) {     
       while (serialAvailable()){ 
          sb = serialRead();             
          strArray[indx] = sb;
          indx++;
          serialWrite(sb);
       }
    }  
    Serial.println();
}
*/

//read a string from the serial and store it in an array
//this func uses globally set variable so it's not so reusable
//I need to find the right syntax to be able to pass to the function 2 parameters:
// the stringArray and (eventually) the index count
void readSerialString () {
    int sb;   
    if(Serial.available()) { 
       //Serial.print("reading Serial String: ");     //optional confirmation
       while (Serial.available()){ 
          sb = Serial.read();             
          serInString[serInIndx] = sb;
          serInIndx++;
          //serialWrite(sb);                        //optional confirmation
       }
       //Serial.println();
    }  
}

//print the string all in one time
//this func as well uses global variables
void printSerialString() {
   if( serInIndx > 0) {
      Serial.print("Arduino memorized that you said: ");     
      //loop through all bytes in the array and print them out
      for(serOutIndx=0; serOutIndx < serInIndx; serOutIndx++) {
          Serial.print( serInString[serOutIndx] );    //print out the byte at the specified index
          //serInString[serOutIndx] = "";            //optional: flush out the content
      }        
      //reset all the functions to be able to fill the string back with content
      serOutIndx = 0;
      serInIndx  = 0;
      Serial.println();
   }

}


void setup() {
  Serial.begin(9600);
  Serial.println("Hello World");   
}

void loop () {
  //simple feedback from Arduino
  
  //read the serial port and create a string out of what you read
  //readSerialString(serInString, serInIndx);
  readSerialString();
  
  //do somenthing else perhaps wait for other data or read another Serial string
  Serial.println ("------------ arduino is doing somenthing else ");
  
  //try to print out collected information. it will do it only if there actually is some info.
  printSerialString();
  
  //slows down the visualization in the terminal
  delay(2000);
}
